<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>向往的生活</title>
  
  <subtitle>干翻从前的自己</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.devopsai.cn/"/>
  <updated>2020-07-07T08:34:50.867Z</updated>
  <id>http://www.devopsai.cn/</id>
  
  <author>
    <name>骑驴的绅士</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>KUBERNETES学习之路（一）</title>
    <link href="http://www.devopsai.cn/2020/07/07/KUBERNETES%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.devopsai.cn/2020/07/07/KUBERNETES%E5%AD%A6%E4%B9%A0%E4%B9%8B%E8%B7%AF%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2020-07-07T05:53:16.253Z</published>
    <updated>2020-07-07T08:34:50.867Z</updated>
    
    <content type="html"><![CDATA[<h1 id="KUBERNETES学习之路（一）"><a href="#KUBERNETES学习之路（一）" class="headerlink" title="KUBERNETES学习之路（一）"></a>KUBERNETES学习之路（一）</h1><h3 id="什么是kubernetes-，是做什么用的，有什么好处"><a href="#什么是kubernetes-，是做什么用的，有什么好处" class="headerlink" title="什么是kubernetes ，是做什么用的，有什么好处"></a>什么是kubernetes ，是做什么用的，有什么好处</h3><p>Kubernetes是Google开源的一个容器编排引擎，它支持自动化部署、大规模可伸缩、应用容器化管理。在生产环境中部署一个应用程序时，通常要部署该应用的多个实例以便对应用请求进行负载均衡。</p><p>在Kubernetes中，我们可以创建多个容器，每个容器里面运行一个应用实例，然后通过内置的负载均衡策略，实现对这一组应用实例的管理、发现、访问，而这些细节都不需要运维人员去进行复杂的手工配置和处理。</p><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><h3 id="kubernetes-由什么组成，组成部分都有什么作用"><a href="#kubernetes-由什么组成，组成部分都有什么作用" class="headerlink" title="kubernetes 由什么组成，组成部分都有什么作用"></a>kubernetes 由什么组成，组成部分都有什么作用</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;KUBERNETES学习之路（一）&quot;&gt;&lt;a href=&quot;#KUBERNETES学习之路（一）&quot; class=&quot;headerlink&quot; title=&quot;KUBERNETES学习之路（一）&quot;&gt;&lt;/a&gt;KUBERNETES学习之路（一）&lt;/h1&gt;&lt;h3 id=&quot;什么是ku
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Tomcat构建企业级高级负载Web服务器</title>
    <link href="http://www.devopsai.cn/2020/07/07/Tomcat%E6%9E%84%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%AB%98%E7%BA%A7%E8%B4%9F%E8%BD%BDWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.devopsai.cn/2020/07/07/Tomcat%E6%9E%84%E5%BB%BA%E4%BC%81%E4%B8%9A%E7%BA%A7%E9%AB%98%E7%BA%A7%E8%B4%9F%E8%BD%BDWeb%E6%9C%8D%E5%8A%A1%E5%99%A8/</id>
    <published>2020-07-07T02:40:31.754Z</published>
    <updated>2020-07-07T08:35:00.433Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Tomcat构建企业级高级负载Web服务器"><a href="#Tomcat构建企业级高级负载Web服务器" class="headerlink" title="Tomcat构建企业级高级负载Web服务器"></a>Tomcat构建企业级高级负载Web服务器</h1><h3 id="Tomcat中间件是什么"><a href="#Tomcat中间件是什么" class="headerlink" title="Tomcat中间件是什么"></a>Tomcat中间件是什么</h3><p>Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为目前比较流行的Web 应用服务器。</p><p>同款产品还有Resin,JBOSS,WebSphere(IBM),Weblogic(Oracle) 有兴趣的同学可以多了解下</p><p>tomcat的官方地址: http:tomcat.apache.org</p><p>安装tomcat必须要安装jdk（java）：<a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><h5 id="tomcat架构方式"><a href="#tomcat架构方式" class="headerlink" title="tomcat架构方式"></a>tomcat架构方式</h5><p>  1.单机部署 tomcat</p><p>  2.nginx负载集群部署tomcat</p><p>​                      tomcat1</p><p>​    nginx—&gt;  tomcat2</p><p>​                      tomcat3</p><h4 id="tomcat部署"><a href="#tomcat部署" class="headerlink" title="tomcat部署"></a>tomcat部署</h4><h6 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h6><p>  我们需要一台centos服务器内存需要6G，我们这里用的centos7.x</p><h6 id="部署java"><a href="#部署java" class="headerlink" title="部署java"></a>部署java</h6><p>  我们可以用yum的方式安装java 也可以用二进制的方式安装我选择的是二进制安装方式</p><p>  首先我们需要安装jdk 这个包去官网下载jdk8的包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u151-linux-x64.tar.gz -C &#x2F;usr&#x2F;local</span><br><span class="line">ln -s &#x2F;usr&#x2F;loca&#x2F;jdk1.8.0_151&#x2F; &#x2F;usr&#x2F;local&#x2F;java</span><br></pre></td></tr></table></figure><p> 安装完之后我们要设置jdk的环境变量</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">vim &#x2F;etc&#x2F;profile</span><br><span class="line">JAVA_HOME&#x3D;&#x2F;usr&#x2F;local&#x2F;java</span><br><span class="line">CLASSPATH&#x3D;.:\$JAVA_HOME&#x2F;lib&#x2F;dt.jar:\$JAVA_HOME&#x2F;lib&#x2F;tools.jar</span><br><span class="line">PATH&#x3D;\$JAVA_HOME&#x2F;bin:\$PATH</span><br><span class="line">export JAVA_HOME CLASSPATH PATH</span><br><span class="line"></span><br><span class="line">source &#x2F;etc&#x2F;profile #生效配置文件</span><br><span class="line"></span><br><span class="line">java -version #执行本命令出现下面的内容恭喜你成功安装java了  </span><br><span class="line">java version &quot;1.8.0_151&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_151-b12)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.151-b12, mixed mode)</span><br></pre></td></tr></table></figure><h6 id="安装tomcat"><a href="#安装tomcat" class="headerlink" title="安装tomcat"></a>安装tomcat</h6><h6 id="启动tomcat"><a href="#启动tomcat" class="headerlink" title="启动tomcat"></a>启动tomcat</h6>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Tomcat构建企业级高级负载Web服务器&quot;&gt;&lt;a href=&quot;#Tomcat构建企业级高级负载Web服务器&quot; class=&quot;headerlink&quot; title=&quot;Tomcat构建企业级高级负载Web服务器&quot;&gt;&lt;/a&gt;Tomcat构建企业级高级负载Web服务器&lt;/
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo 搭建个人博客二博客美化</title>
    <link href="http://www.devopsai.cn/2020/07/06/Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BA%8C%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/"/>
    <id>http://www.devopsai.cn/2020/07/06/Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%BA%8C%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96/</id>
    <published>2020-07-06T01:23:25.522Z</published>
    <updated>2020-07-07T08:47:47.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-搭建个人博客二博客美化"><a href="#Hexo-搭建个人博客二博客美化" class="headerlink" title="Hexo 搭建个人博客二博客美化"></a>Hexo 搭建个人博客二博客美化</h1><p>鼠标点击特效</p><p><img src="https://blogdata-1258545379.cos.ap-shanghai.myqcloud.com/20190124/5308475-78e64c0a80bb559e.gif" alt="img"></p><p>具体步骤如下：</p><p>在/themes/next/source/js/src下新建文件 love.js ，接着把下面的代码拷贝粘贴到 love.js 文件中：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e&#x3D;0;e&lt;d.length;e++)d[e].alpha&lt;&#x3D;0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+&#x3D;.004,d[e].alpha-&#x3D;.013,d[e].el.style.cssText&#x3D;&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t&#x3D;&quot;function&quot;&#x3D;&#x3D;typeof e.onclick&amp;&amp;e.onclick;e.onclick&#x3D;function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a&#x3D;t.createElement(&quot;div&quot;);a.className&#x3D;&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a&#x3D;t.createElement(&quot;style&quot;);a.type&#x3D;&quot;text&#x2F;css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText&#x3D;e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d&#x3D;[];e.requestAnimationFrame&#x3D;function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3&#x2F;60)&#125;&#125;(),n()&#125;(window,document);</span><br></pre></td></tr></table></figure><p>在<code>\themes\next\layout\_layout.swig</code>文件末尾添加：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">页面点击小红心</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">&lt;script</span> <span class="string">type="text/javascript"</span> <span class="string">src="/js/src/love.js"&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>这个标签的操作我会给大家说说</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200705215521969.png" alt="image-20200705215521969"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-搭建个人博客二博客美化&quot;&gt;&lt;a href=&quot;#Hexo-搭建个人博客二博客美化&quot; class=&quot;headerlink&quot; title=&quot;Hexo 搭建个人博客二博客美化&quot;&gt;&lt;/a&gt;Hexo 搭建个人博客二博客美化&lt;/h1&gt;&lt;p&gt;鼠标点击特效&lt;/p&gt;
&lt;p&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Hexo 搭建个人博客教程</title>
    <link href="http://www.devopsai.cn/2020/07/04/Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
    <id>http://www.devopsai.cn/2020/07/04/Hexo%20%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</id>
    <published>2020-07-04T15:42:54.429Z</published>
    <updated>2020-07-07T08:34:41.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Hexo-搭建个人博客教程"><a href="#Hexo-搭建个人博客教程" class="headerlink" title="Hexo 搭建个人博客教程"></a>Hexo 搭建个人博客教程</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h4 id="了解Hexo"><a href="#了解Hexo" class="headerlink" title="了解Hexo"></a>了解Hexo</h4><p>[Hexo]是高效的静态站点生成框架，她基于Node.js。 通过 Hexo 你可以轻松地使用 Markdown 编写文章，除了 Markdown 本身的语法之外，还可以使用 Hexo 提供的标签插件来快速的插入特定形式的内容，而且相对于其他框架，Hexo在速度上也有很大优势。</p><h4 id="安装Git版本工具"><a href="#安装Git版本工具" class="headerlink" title="安装Git版本工具"></a>安装Git版本工具</h4><p>Git是目前世界上最流行的分布式版本控制系统，是的，没有之一。使用Git可以帮助我们把本地的网页和文章等内容提交到Gihub上，实现同步。<br> 下载地址：[<a href="https://git-scm.com/downloads]" target="_blank" rel="noopener">https://git-scm.com/downloads]</a><br> Windows系统需下载，Mac系统因为自带Git无需操作。<br> 测试安装：git  - -version，查看显示版本号即成功。</p><h4 id="搭建Node-js环境"><a href="#搭建Node-js环境" class="headerlink" title="搭建Node.js环境"></a>搭建Node.js环境</h4><p>我们了解到Hexo基于Node.js的，那么我们搭建博客网站首先需要安装Node.js环境。 Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境，可以在非浏览器环境下，解释运行 JS 代码。<br> 下载地址：[<a href="http://nodejs.cn/download]" target="_blank" rel="noopener">http://nodejs.cn/download]</a><br> 测试安装：命令行使用node -v 、npm -v，查看显示版本号即成功。</p><h4 id="安装Hexo博客框架工具"><a href="#安装Hexo博客框架工具" class="headerlink" title="安装Hexo博客框架工具"></a>安装Hexo博客框架工具</h4><p>Hexo是一个建站工具，可以帮助我们快速生成基本的博客文件，安装它需要在控制台下使用如下命令：</p><p>打开git 测试上面命令都有进行下面安装hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo -v #查看版本时否安装成功</span><br></pre></td></tr></table></figure><p>下面是hexo的基础命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清除缓存</span><br><span class="line">hexo g #生成文件 对配置修改执行一次</span><br><span class="line">hexo s #开始服务器 默认localhost:4000</span><br><span class="line">hexo d #--deploy 上传到github上</span><br><span class="line">hexo new &quot;文本名称&quot; #上传到博客的文章名字</span><br></pre></td></tr></table></figure><h3 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h3><p>gitHub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。这里用到Github，是因为我们需要通过Github得到自己的博客网站域名，而且需要使用gitHub同步我们个人博客的相关文件。<br> 注册地址：[<a href="https://github.com]">https://github.com]</a></p><p> 登录后我们需要点击右上角加号 new repository</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704220030404.png" alt="image-20200704220030404"></p><p>​    注意：仓库的名字前缀要和Owner一样 创建完成后我们打开settings</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704220329129.png" alt="image-20200704220329129"></p><p>​     看到Your site pubilshed at 你的github地址说明你就可以访问了接下来我们开始本地建站</p><h3 id="创建本地hexo博客站点"><a href="#创建本地hexo博客站点" class="headerlink" title="创建本地hexo博客站点"></a>创建本地hexo博客站点</h3><p>​    首先你要在你的电脑除了C盘之外的地方创建我们的工作目录myblog</p><p>​    </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init myblog #初始化博客工作目录</span><br><span class="line">hexo g #生成文件</span><br><span class="line">hexo s #开始服务</span><br></pre></td></tr></table></figure><p>这时候打开localhost:4000看下最初的</p><p><img src="https://upload-images.jianshu.io/upload_images/1244124-3e96fc83cdb07011.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/934/format/webp" alt="img"></p><h3 id="部署我们的next主题（个人感觉还不错哦）"><a href="#部署我们的next主题（个人感觉还不错哦）" class="headerlink" title="部署我们的next主题（个人感觉还不错哦）"></a>部署我们的next主题（个人感觉还不错哦）</h3><p>我的展示页（因为不会前端所以搞处理也是有点累的）</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704231303884.png" alt="image-20200704231303884"></p><p>看完效果是不是有点小激动啊下面我们开始了</p><p>首先我们打开<a href="https://github.com/theme-next/hexo-theme-next.git" target="_blank" rel="noopener">https://github.com/theme-next/hexo-theme-next.git</a> 点击Dowload ZIP</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704230823719.png" alt="image-20200704230823719"></p><p>下载下来之后我们需要把文件放到/myblog/themes/ 下面改名为next</p><h6 id="修改主配置文件"><a href="#修改主配置文件" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h6><p> 在博客主目录/myblog目录下面有一个 _config.yaml文件 打开它找到theme: 修改后面为next(冒号后面有空格的)</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704231745140.png" alt="image-20200704231745140"></p><p>这时我们再次执行 hexo s 你会看到</p><p><img src="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-04-16.2dvd68y21dm.png" alt="https://cdn.jsdelivr.net/gh/kjhuanhao/blogcdn/img/Snipaste_2020-02-29_10-04-16.2dvd68y21dm.png"></p><p>这看起来是不是还是有点难看呢我们再修改下 打开主配置文件_config 找到下面的内容</p><p>title 是我们的最上头的Hexo位置的</p><p>subtitle 是Hexo下面的 这个可以写一些有哲理的话</p><p>author 是作者</p><p>description 是现在是再作者下面的内容</p><p>  language 要需改成中文</p><p>timezone 时区要修改成上海</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704232656783.png" alt="image-20200704232656783"></p><p>接下来我们打开主题的配置文件 next目录下面的_config文件修改主题样式</p><p>Muse 是默认的那种空白大一些</p><p>Pisces是左右分明的我用的这个</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704233129241.png" alt="image-20200704233129241"></p><p>在根目录下用git再次执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s #看到大概的样式了</span><br></pre></td></tr></table></figure><p>我们试着生成一个Markdown文本也是我们博客的内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名字&quot;</span><br><span class="line">hexo new &quot;my-first-blog&quot;</span><br></pre></td></tr></table></figure><p> 这个文件在 主目录的/myblog/source/_posts/下面，我们要修改里面内容</p><p>title 是博客主题</p><p>date 是生成的时间</p><p>tags 是标签</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704233828297.png" alt="image-20200704233828297"></p><p>修改完成执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>剩下的博客优化我也在进行我会抓紧更新</p><h3 id="同步到github可以网络访问"><a href="#同步到github可以网络访问" class="headerlink" title="同步到github可以网络访问"></a>同步到github可以网络访问</h3><p>我们需要git的一些命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;yourname&quot; #创建你的用户和邮箱</span><br><span class="line">$ git config --global user.email &quot;youremail</span><br><span class="line">npm install hexo-deployer-git --save #安装上传的插件</span><br></pre></td></tr></table></figure><p>  我们要修改 myblog目录下面的_config.yml文件中deploy下面的配置</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https:&#x2F;&#x2F;hexo.io&#x2F;docs&#x2F;deployment.html</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: git@github.com:137323747&#x2F;137323747.github.io.git </span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p> #repo 是github项目的克隆的例如</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704224756655.png" alt="image-20200704224756655"></p><p> 接下来我们要生成密钥，在git上执行以下命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen 你的邮箱 #接下来一路回车就可以</span><br></pre></td></tr></table></figure><p> 把id_rsa.pub文件的内容复制下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd ~&#x2F;.ssh&#x2F; #进入到密钥文件目录</span><br><span class="line">cat id_rsa.pub #把内容复制下来</span><br></pre></td></tr></table></figure><p>打开github点击settings —&gt;SSH and GPG keys选项 —&gt;NEW kyes 随便写上名字 把复制下来的.pub的内容粘贴到Key中 —&gt;Add SSH key（添加就成功了）</p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704225741697.png" alt="image-20200704225741697"></p><p><img src="C:%5CUsers%5Cyyxin%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200704230145360.png" alt="image-20200704230145360"></p><p>执行下面命令测试我们是否连接github仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>输入yes回车</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Are you sure you want to continue connecting (yes&#x2F;no&#x2F;[fingerprint])?</span><br></pre></td></tr></table></figure><p>成功后 我们需要把本地的博客目录上传到github上，执行我们的上传命令（需要在博客主目录执行）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #清理下缓存</span><br><span class="line">hexo g d #生成文件 之后上传</span><br></pre></td></tr></table></figure><p>如果你成功了恭喜你 你试试用你的github地址访问下试试 感谢您的观看</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Hexo-搭建个人博客教程&quot;&gt;&lt;a href=&quot;#Hexo-搭建个人博客教程&quot; class=&quot;headerlink&quot; title=&quot;Hexo 搭建个人博客教程&quot;&gt;&lt;/a&gt;Hexo 搭建个人博客教程&lt;/h1&gt;&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>入门之部署二进制kubernetes</title>
    <link href="http://www.devopsai.cn/2020/07/04/%E5%85%A5%E9%97%A8%E4%B9%8B%E9%83%A8%E7%BD%B2%E4%BA%8C%E8%BF%9B%E5%88%B6kubernetes/"/>
    <id>http://www.devopsai.cn/2020/07/04/%E5%85%A5%E9%97%A8%E4%B9%8B%E9%83%A8%E7%BD%B2%E4%BA%8C%E8%BF%9B%E5%88%B6kubernetes/</id>
    <published>2020-07-04T07:44:29.226Z</published>
    <updated>2020-07-07T08:35:11.946Z</updated>
    
    <content type="html"><![CDATA[<h1 id="入门之部署二进制kubernetes"><a href="#入门之部署二进制kubernetes" class="headerlink" title="入门之部署二进制kubernetes"></a><em>入门之部署二进制kubernetes</em></h1><p><strong>一.部署前准备</strong>(centos7.x)</p><p>（三台都要做的）</p><p><strong><em>##关闭防火墙</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld &amp;&amp; systemctl disable firewalld #停止&amp;永久关闭防火墙</span><br></pre></td></tr></table></figure><p><strong><em>##关闭selinux</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sed -i &#39;s&#x2F;enforcing&#x2F;disabled&#x2F;&#39; &#x2F;etc&#x2F;selinux&#x2F;config  #替换配置文件永久关闭</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0 #即可生效临时关闭命令</span><br></pre></td></tr></table></figure><p><strong><em>##关闭swap分区</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">swapoff -a #临时关闭swap</span><br><span class="line"></span><br><span class="line">sed -ri &#39;s&#x2F;.\*swap.\*&#x2F;#&amp;&#x2F;&#39; &#x2F;etc&#x2F;fstab #永久关闭</span><br></pre></td></tr></table></figure><p><strong><em>##设置主机名hosts配置文件</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl set-hostname &lt;yourname&gt;</span><br><span class="line"></span><br><span class="line">cat &gt;&gt; &#x2F;etc&#x2F;hosts &lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">#&lt;your 1机ip&gt;    &lt;yourname&gt;</span><br><span class="line"></span><br><span class="line">192.168.159.9    k8s-master</span><br><span class="line"></span><br><span class="line">192.168.159.10    k8s-node1</span><br><span class="line"></span><br><span class="line">192.168.159.11    k8s-node2</span><br><span class="line"></span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p><strong><em>##设置内核参数</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt;&#x2F;etc&#x2F;sysctl.d&#x2F;k8s.conf&lt;&lt; EOF</span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-ip6tables &#x3D; 1  ##开启IPV4&#x2F;6的bridge的数据经过iptables处理</span><br><span class="line"></span><br><span class="line">net.bridge.bridge-nf-call-iptables &#x3D; 1</span><br><span class="line"></span><br><span class="line">net.ipv4.ip_forward &#x3D; 1    ##开启路由转发功能</span><br><span class="line"></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sysctl --system  #生效配置文件</span><br></pre></td></tr></table></figure><p><strong><em>##时间同步</em></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum install ntpdate -y </span><br><span class="line"></span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure><p><strong>二.部署etcd集群</strong></p><p>etcd是k8s的数据库 是一个键值形式的存储系统 部署在三台k8s服务器上防止单点故障 如果资源足够</p><p>可以单独部署etcd（因为电脑内存有限直接部署在k8s-mater、node上了）</p><p>etcd1部署在master |etcd2部署在node1|etcd3部署在node2</p><p><strong><strong>此操作在k8s-master上，安装密钥生成工具cfssl</strong></strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;pkg.cfssl.org&#x2F;R1.2&#x2F;cfssl_linux-amd64</span><br><span class="line">wget https:&#x2F;&#x2F;pkg.cfssl.org&#x2F;R1.2&#x2F;cfssljson_linux-amd64</span><br><span class="line">wget https:&#x2F;&#x2F;pkg.cfssl.org&#x2F;R1.2&#x2F;cfssl-certinfo_linux-amd64</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">chmod +x cfssl_linux-amd64 cfssljson_linux-amd64 cfssl-certinfo_linux-amd64</span><br><span class="line"> mv cfssl_linux-amd64 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;cfssl</span><br><span class="line"> mv cfssljson_linux-amd64 &#x2F;usr&#x2F;local&#x2F;bin&#x2F;cfssljson</span><br><span class="line"> mv cfssl-certinfo_linux-amd64 &#x2F;usr&#x2F;bin&#x2F;cfssl-certinfo</span><br></pre></td></tr></table></figure><h3 id="生成证书"><a href="#生成证书" class="headerlink" title="生成证书"></a>生成证书</h3><p>自签证书颁发CA</p><p>创建工作目录：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~&#x2F;TLS&#x2F;&#123;etcd,k8s&#125;</span><br><span class="line">cd TLS&#x2F;etcd</span><br></pre></td></tr></table></figure><p>自签CA：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;signing&quot;: &#123;</span><br><span class="line">    &quot;default&quot;: &#123;</span><br><span class="line">      &quot;expiry&quot;: &quot;87600h&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;profiles&quot;: &#123;</span><br><span class="line">      &quot;www&quot;: &#123;</span><br><span class="line">         &quot;expiry&quot;: &quot;87600h&quot;,</span><br><span class="line">         &quot;usages&quot;: [</span><br><span class="line">            &quot;signing&quot;,</span><br><span class="line">            &quot;key encipherment&quot;,</span><br><span class="line">            &quot;server auth&quot;,</span><br><span class="line">            &quot;client auth&quot;</span><br><span class="line">        ]</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    &quot;CN&quot;: &quot;etcd CA&quot;,</span><br><span class="line">    &quot;key&quot;: &#123;</span><br><span class="line">        &quot;algo&quot;: &quot;rsa&quot;,</span><br><span class="line">        &quot;size&quot;: 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    &quot;names&quot;: [</span><br><span class="line">        &#123;</span><br><span class="line">            &quot;C&quot;: &quot;CN&quot;,</span><br><span class="line">            &quot;L&quot;: &quot;Beijing&quot;,</span><br><span class="line">            &quot;ST&quot;: &quot;Beijing&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">#生成证书：</span><br><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br><span class="line"></span><br><span class="line">ls *pem</span><br><span class="line">ca-key.pem  ca.pem</span><br></pre></td></tr></table></figure><h3 id="使用CA签分Etcd-HTTPS证书"><a href="#使用CA签分Etcd-HTTPS证书" class="headerlink" title="使用CA签分Etcd HTTPS证书"></a>使用CA签分Etcd HTTPS证书</h3><p>创建证书申请文件：</p><p>cat &gt; server-csr.json &lt;&lt; EOF<br> {<br>   “CN”: “etcd”,<br>   “hosts”: [<br>   “192.1168.159.9”,<br>   “192.1168.159.10”,<br>   “192.1168.159.11”<br>   ],<br>   “key”: {<br>     “algo”: “rsa”,<br>     “size”: 2048<br>   },<br>   “names”: [<br>     {<br>       “C”: “CN”,<br>       “L”: “BeiJing”,<br>       “ST”: “BeiJing”<br>     }<br>   ]<br> }<br> EOF</p><p>上述地址位置需要修改成您自己的测试地址</p><h4 id="证书生成"><a href="#证书生成" class="headerlink" title="证书生成"></a>证书生成</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca&#x3D;ca.pem -ca-key&#x3D;ca-key.pem -config&#x3D;ca-config.json -profile&#x3D;www server-csr.json | cfssljson -bare server</span><br><span class="line"></span><br><span class="line">ls server*pem</span><br><span class="line">server-key.pem  server.pem</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;入门之部署二进制kubernetes&quot;&gt;&lt;a href=&quot;#入门之部署二进制kubernetes&quot; class=&quot;headerlink&quot; title=&quot;入门之部署二进制kubernetes&quot;&gt;&lt;/a&gt;&lt;em&gt;入门之部署二进制kubernetes&lt;/em&gt;&lt;/h1&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>您好，Hi</title>
    <link href="http://www.devopsai.cn/2020/07/03/hello-hexo/"/>
    <id>http://www.devopsai.cn/2020/07/03/hello-hexo/</id>
    <published>2020-07-03T08:35:27.000Z</published>
    <updated>2020-07-03T09:10:55.392Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="hexo" scheme="http://www.devopsai.cn/tags/hexo/"/>
    
  </entry>
  
</feed>
